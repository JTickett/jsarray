button,
input,
select {
  width: $element-width;
  border: none;
  font-size: 1.1rem;
  padding: 15px;
  border-radius: $br-small;
  margin-top: 10px;
}

#main-image-container {
  transition: transform $zoom-duration $zoom-curve;
  &:hover {
    -ms-transform: scale($zoom-scale-main); /* IE 9 */
    -webkit-transform: scale($zoom-scale-main); /* Safari 3-8 */
    transform: scale($zoom-scale-main);
  }
}

#email-input {
  line-height: 20px;
  justify-content: center;
  align-items: center;
  text-align: center;

  // This would work if we were going to accept test@test,
  // but it seems like the HTML5 pattern attribute doesn't handle complicated regex with substrings :(
  // It does also have an issue of blank field being invalid.

  // &:valid{
  //   background-color: palegreen;
  // }
  // &:invalid{
  //   background-color: lightpink;
  // }
}

// Finally found a nice use case for @extend! :) 
.button-template {
  display: block;
  justify-content: center;
  align-items: center;
  text-align: center;
}

#random-image-button {
  @extend .button-template;
  @include button($bgcolor: $btn-random, $brcolor: darken($btn-random, 5%));
  &:hover {
    background-color: lighten($btn-random, 10%);
    border-color: darken($btn-random, 0%);
  }
}
  
#assign-to-email-button {
  @extend .button-template;
  @include button($bgcolor: $btn-email, $brcolor: darken($btn-email, 10%));
  &:hover {
    background-color: lighten($btn-email, 10%);
    border-color: darken($btn-email, 0%);
  }
}


button {
  cursor: pointer;
  font-weight: 400;
  font-size: 1.2rem;
  @media (min-width: $break--s) {
    font-size: 1.5rem;
  }
  transition: $transition-button;
}

.invisible {
  display: none;
}
.visible {
  display: block;
}
